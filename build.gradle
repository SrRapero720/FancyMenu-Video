plugins {
    id 'java'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = modversion
group = modgroup
base { archivesName = "${modid}-${mcversion}" }

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: mappingsch, version: mappings_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true
    runs {
        client {
            taskName "FMClient-${mcversion}"
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            property 'log4j.appender.Console', "org.apache.log4j.ConsoleAppender"
            property 'terminal.jline', 'true'
            //arg "-mixin.config=fancymenu.general.mixin.json"

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }


    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://maven.tterrag.com/" }
    maven {
        url "https://www.cursemaven.com"
        content { includeGroup "curse.maven" }
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcversion}-${fgversion}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    // DEPENDENCIES
    implementation fg.deobf("curse.maven:fancymenu-forge-367706:${fancymenuversion}")
    implementation fg.deobf("curse.maven:konkrete-410295:${konkreteversion}")
    implementation "com.github.SrRapero720.watermedia:build:${watermediaversion}"

    // UTIL
    implementation fg.deobf("curse.maven:ferritecore-429235:${ferritecoreversion}")
    implementation fg.deobf("curse.maven:lazy-dfu-forge-460819:${lazyversion}")
}

processResources {
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand rootProject.properties
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": modname,
            "Specification-Vendor": modauthor,
            "Specification-Version": modversion,
            "Implementation-Title": modname,
            "Implementation-Version": modversion,
            "Implementation-Vendor" : modauthor,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "Signing-Fingerprint": project.hasProperty('fingerprint') ? project.property('fingerprint') : 'unsigned',
			//"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            //"TweakOrder": 0,
            //"MixinConfigs" : "fancymenu.general.mixin.json"
        ])
    }
}


jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
}
tasks.processResources.outputs.upToDateWhen { false }